Routines:
  we need something to save the file, and save as (if the style
      being edited currently the one in use by the system
      we need to reload config etc to update the changes)
  
  we need a way for when the user wants to create
    a new style it will ask them what the want to name 
    it, then it will create styleName/ styleName/theme.cfg 
    styleName/pixmaps/

  I want to add xml and web support to the app so it will visit
    http://art.fluxbox-wiki.org/ and will work similar to 
    Gnome Art (http://www.miketech.net/gnome-art/)
  

GUI:
  Make the buttons work
    and lets try to make this thing easy to use and 
    so when you get to it you can be productive from 
    the start lets talk with people like tenner as much 
    as possible to get an idea what he would like since
    he is the #1 style maker for fluxbox right now.
    
  the editor will have several filechooser buttons, they will 
    need to open in the styleName/pixmaps folder for the current 
    style, and also to have a filter on them to only allow valid 
    types (man flluxstyle for details I think or ask tenner)
  

  


Parsers:
  Rathnor is adding to the fluxbox src a way to generate a list of all 
  style items (during compile time iirc) This app will use that list
  to dynamicly add/remove style items that fluxbox supports.
  We need a parser to parse this file, but we need to do it so we dont 
  have to parse it every time. Basicly parse one time then check if the 
  file changed if so then reparse, else we can use some binary type
  file to load settings faster and using less memory.

  We need to get a parser that will parse styles, see man fluxstyle and
  all the styles you can find to see what youre up against. I propose using
  a dict{} to store the results in. We need them in key => value I think,
  so when the gui is dynamicly built it will be able to know what widgets
  to put where.

  

MORE TO COME AS WE THINK OF IT!!
